-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.DiscountErrorReason exposing (DiscountErrorReason(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Reason that discount code cannot be applied.

  - Expired - The discount has expired.
  - OverLimit - The discount has been used too many times.
  - Notfound - The discount code does not exist. Note that discount codes are case sensitive.

-}
type DiscountErrorReason
    = Expired
    | OverLimit
    | Notfound


list : List DiscountErrorReason
list =
    [ Expired, OverLimit, Notfound ]


decoder : Decoder DiscountErrorReason
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "EXPIRED" ->
                        Decode.succeed Expired

                    "OVER_LIMIT" ->
                        Decode.succeed OverLimit

                    "NOTFOUND" ->
                        Decode.succeed Notfound

                    _ ->
                        Decode.fail ("Invalid DiscountErrorReason type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : DiscountErrorReason -> String
toString enum =
    case enum of
        Expired ->
            "EXPIRED"

        OverLimit ->
            "OVER_LIMIT"

        Notfound ->
            "NOTFOUND"
